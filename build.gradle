plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'net.croz.apicurio-registry-gradle-plugin' version '1.1.0'
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.7.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven"
	}
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.confluent:kafka-avro-serializer:7.3.3'
	implementation 'io.confluent:kafka-streams-avro-serde:7.3.3'
	implementation "org.apache.avro:avro:1.11.0"
	implementation 'io.apicurio:apicurio-registry-serdes-avro-serde:2.3.1.Final'
	implementation 'io.apicurio:apicurio-registry-utils-serde:1.3.2.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

avro {
}

schemaRegistry {
	config {
		url("http://localhost:8081")
	}
	register {
		artifact {
			id = "com.example.kafka.dto.Transaction"
			name = "Transaction"
			type = "AVRO"
			path = "src/main/avro/Transaction.avsc"
		}
		artifact {
			id = "com.example.kafka.dto.User"
			name = "User"
			type = "AVRO"
			path = "src/main/avro/User.avsc"
		}
		artifact {
			id = "com.example.kafka.dto.Account"
			name = "Account"
			type = "AVRO"
			path = "src/main/avro/Account.avsc"
		}
		artifact {
			id = "com.example.kafka.dto.TransactionEnriched"
			name = "TransactionEnriched"
			type = "AVRO"
			path = "src/main/avro/TransactionEnriched.avsc"
		}
	}
}
